{"version":3,"file":"component---src-pages-about-tsx-066fc8f08c1fb6b2671b.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/pages/about.tsx","webpack://gatsby-starter-apple/./node_modules/lodash/_Symbol.js","webpack://gatsby-starter-apple/./node_modules/lodash/_arrayMap.js","webpack://gatsby-starter-apple/./node_modules/lodash/_arrayReduce.js","webpack://gatsby-starter-apple/./node_modules/lodash/_baseGetTag.js","webpack://gatsby-starter-apple/./node_modules/lodash/_baseToString.js","webpack://gatsby-starter-apple/./node_modules/lodash/_freeGlobal.js","webpack://gatsby-starter-apple/./node_modules/lodash/_getRawTag.js","webpack://gatsby-starter-apple/./node_modules/lodash/_objectToString.js","webpack://gatsby-starter-apple/./node_modules/lodash/_root.js","webpack://gatsby-starter-apple/./node_modules/lodash/isArray.js","webpack://gatsby-starter-apple/./node_modules/lodash/isObjectLike.js","webpack://gatsby-starter-apple/./node_modules/lodash/isSymbol.js","webpack://gatsby-starter-apple/./node_modules/lodash/toString.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport type { Query } from \"Types/GraphQL\"\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport Markdown from \"Styles/markdown\"\nimport { rhythm } from \"Styles/typography\"\n\nconst About = () => {\n  const data = useStaticQuery<Query>(graphql`\n    query {\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n        edges {\n          node {\n            html\n          }\n        }\n      }\n    }\n  `)\n\n  const markdown = data.allMarkdownRemark.edges[0].node.html\n\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <Container\n        dangerouslySetInnerHTML={{ __html: markdown ?? \"\" }}\n        rhythm={rhythm}\n      ></Container>\n    </Layout>\n  )\n}\n\nconst Container = styled(Markdown).attrs({\n  as: \"main\",\n})`\n  width: var(--post-width);\n  margin: 0 auto;\n  margin-top: 80px;\n  margin-bottom: 6rem;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-xl);\n    width: 87.5%;\n  }\n\n  h1 {\n    margin-bottom: 2rem;\n  }\n\n  h2 {\n    margin-top: var(--sizing-lg);\n\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.75rem;\n    }\n  }\n\n  h3 {\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.25rem;\n    }\n  }\n`\n\nexport default About\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n"],"names":["Container","styled","Markdown","attrs","as","theme","device","sm","markdown","useStaticQuery","allMarkdownRemark","edges","node","html","title","dangerouslySetInnerHTML","__html","rhythm","Symbol","module","exports","array","iteratee","index","length","result","Array","accumulator","initAccum","getRawTag","objectToString","symToStringTag","toStringTag","undefined","value","Object","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","toString","baseToString","call","freeGlobal","g","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","e","freeSelf","self","root","Function","baseGetTag","isObjectLike"],"sourceRoot":""}