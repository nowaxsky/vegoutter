{"version":3,"file":"component---src-templates-blog-post-tsx-b39e428f25d7134c5797.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/components/comment.tsx","webpack://gatsby-starter-apple/./src/templates/blogPost.tsx"],"sourcesContent":["import React, { useRef, useContext, useEffect } from \"react\"\n\nimport ThemeContext from \"Stores/themeContext\"\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\nimport { DARK } from \"Constants/theme\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        repo,\n        \"issue-term\": \"title\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import React, { useRef } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport kebabCase from \"lodash/kebabCase\"\n\nimport type { Query, MarkdownRemarkGroupConnection } from \"Types/GraphQL\"\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport Comment from \"Components/comment\"\nimport { rhythm } from \"Styles/typography\"\nimport Category from \"Styles/category\"\nimport DateTime from \"Styles/dateTime\"\nimport Markdown from \"Styles/markdown\"\nimport { DOMAINS } from \"Constants/domain\"\n\ninterface BlogPostProps {\n  data: Query\n  tagList: MarkdownRemarkGroupConnection[],\n}\n\nconst BlogPost: React.FC<BlogPostProps> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category, tags } = frontmatter!\n\n  const ogImagePath = thumbnail && thumbnail?.childImageSharp?.gatsbyImageData?.src\n  const tagRef = useRef<HTMLUListElement>(null)\n  const domainDescription = DOMAINS.find(domain => domain.name === category)?.description\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath!} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{domainDescription}</PostCategory>\n                    <PostTag ref={tagRef} className=\"invisible-scrollbar\">\n                      {tags\n                        .map(tag => {\n                          return (\n                            <li key={tag}>\n                              <TagButton\n                                to={`/${category}/tag/${kebabCase(tag!)}/`}\n                              >\n                                #{tag}\n                              </TagButton>\n                            </li>\n                          )\n                        })}\n                    </PostTag>\n                    <br />\n                    <Time dateTime={date}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nconst PostTag = styled.ul`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  display: flex;\n  list-style: none;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  li + li {\n    margin-left: 6px;\n  }\n`\n\nconst TagButton = styled(Link)`\n  cursor: pointer;\n  display: block;\n  background-color: var(--color-tag-button);\n  border-radius: var(--border-radius-base);\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n\n  :focus {\n    outline: none;\n  }\n\n  &:hover {\n    color: var(--color-blue);\n  }\n\n  &:focus-visible {\n    color: var(--color-white);\n    background-color: var(--color-blue);\n  }\n`\n\nexport const query = graphql`query ($slug: String!) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    frontmatter {\n      title\n      desc\n      thumbnail {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n        }\n      }\n      date(formatString: \"YYYY-MM-DD\")\n      category\n      tags\n    }\n  }\n}\n`\n\nexport default BlogPost\n"],"names":["src","LIGHT_THEME","DARK_THEME","Comment","repo","useSiteMetadata","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","message","type","contentWindow","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","createUtterancesEl","ref","displayName","OuterWrapper","styled","device","sm","InnerWrapper","CommentWrap","PostCategory","Category","Info","Time","DateTime","Desc","Divider","Title","md","PostTag","TagButton","Link","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","tags","ogImagePath","childImageSharp","gatsbyImageData","tagRef","domainDescription","DOMAINS","domain","name","description","image","className","map","tag","to","kebabCase","dateTime","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}